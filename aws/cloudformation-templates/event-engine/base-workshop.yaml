---
AWSTemplateFormatVersion: 2010-09-09

Description: >
  This template deploys the base Retail Demo Store project and workshop notebooks in the Event Engine. 
  MUST BE DEPLOYED IN THE SAME REGION AS THE ResourceBucket PARAMETER BELOW!

Parameters:
  ResourceBucket:
    Type: String
    Description: >
      S3 bucket name where the Retail Demo Store deployment resources are staged (product images, nested CloudFormation templates, source code snapshot, 
      notebooks, deployment Lambda code, etc).
    # This is the Retail Demo Store project's standard staging bucket for deployments into us-east-1. The contents in this 
    # bucket are always kept in sync with the latest from the upstream Retail Demo Store GH repo. If you want to deploy custom 
    # coding changes, data files, custom nested CFN templates, or whatever for your workshop, you will need to stage ALL required 
    # deployment resources to a public S3 bucket (or to the EEAssetsBucket for your EE module) and change the default value 
    # below to match your bucket. The stage.sh script in the root of the Retail Demo Store repo can be used to stage these 
    # resources. See the documentation in the GH repo for details. As noted above, the region of your staging bucket must 
    # match the region where you're deploying your event in Event Engine.
    Default: 'retail-demo-store-us-east-1'

  ResourceBucketRelativePath:
    Type: String
    Description: >
      Optional path in the Deployment Resources Staging bucket where the deployment resources are stored (e.g. path/path2/). 
      Leave blank if resources are at the root of the Staging Resource Bucket. If specified, MUST end with '/'.
    Default: ''
  
Resources:
  # This references the root template.yaml file that comes with the Retail Demo Store. The parameters passed to this template
  # are set to sensible default values for a base Retail Demo Store workshop experience. Change them as needed in your own 
  # Event Engine blueprint and module. Happy Eventing. 
  ee:   # Keep the resource name short to avoid name length issues in nested template resources
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${ResourceBucket}/${ResourceBucketRelativePath}cloudformation-templates/template.yaml
      Parameters:
        ResourceBucket: !Ref ResourceBucket
        ResourceBucketRelativePath: !Ref ResourceBucketRelativePath
        CreateElasticsearchServiceLinkedRole: 'Yes' # DO NOT CHANGE
        SourceDeploymentType: 'CodeCommit' # DO NOT CHANGE
        GitHubRepo: 'retail-demo-store' # N/A SO DO NOT CHANGE
        GitHubBranch: 'master' # N/A SO DO NOT CHANGE
        GitHubToken: 'dummy' # N/A SO DO NOT CHANGE
        GitHubUser: 'dummy' # N/A SO DO NOT CHANGE
        PreIndexElasticsearch: 'No' # Change to 'Yes' if you don't want customers to have to do ES workshop
        PreCreatePersonalizeCampaign: 'No' # Change to 'Yes' if you don't want customers to have to do Personalize workshop (requires 2.5 hours AFTER CFN deployment to complete)
        PreCreatePinpointWorkshop: 'No' # Change to 'Yes' if you don't want customers to have to do Pinpoint workshop
        PinpointEmailFromAddress: 'dummy@dummy.com' # Only change if you change PreCreatePinpointWorkshop to 'Yes'
        PinpointEmailFromName: 'AWS Retail Demo Store'
        AmplitudeApiKey: 'NONE'
        OptimizelySdkKey: 'NONE'
        SegmentWriteKey: 'NONE'

Outputs:
  WebURL:
    Description: Retail Demo Store Web UI URL
    Value: !GetAtt ee.Outputs.WebURL