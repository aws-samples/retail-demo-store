---
AWSTemplateFormatVersion: 2010-09-09

Description: >
    This template deploys the Retail Demo Store API Gateway

Parameters:
  ProductsServiceELBListener:
    Type: String
  UsersServiceELBListener:
    Type: String
  CartsServiceELBListener:
    Type: String
  OrdersServiceELBListener:
    Type: String
  RecommendationsServiceELBListener:
    Type: String
  VideosServiceELBListener:
    Type: String
  SearchServiceELBListener:
    Type: String
  LocationServiceELBListener:
    Type: String
  Subnets:
    Type: String
  VpcId:
    Type: String
  VpcCidr:
    Type: String
  ResourceBucket:
    Type: String
  ResourceBucketRelativePath:
    Type: String
  CognitoAuthorizedRole:
    Type: String
  CognitoUnAuthorizedRole:
    Type: String

Resources:

  VpcLinkSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub ${AWS::StackName}/VPCLinkSecurityGroup
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCidr
          Description: Allow from within the VPC for port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId: !Ref VpcId

  VpcLink:
    Type: AWS::ApiGatewayV2::VpcLink
    Properties: 
      Name: !Sub "${AWS::StackName}-VPCLink"
      SecurityGroupIds: 
        - !Ref VpcLinkSecurityGroup
      SubnetIds: !Split [",", !Ref Subnets]

  HttpAPI:
    Type: 'AWS::ApiGatewayV2::Api'
    DependsOn: VpcLink
    Properties:
      Name: !Sub "${AWS::StackName}-APIGateway"
      ProtocolType: HTTP
      CorsConfiguration:
        AllowMethods:
          - "GET"
          - "OPTIONS"
          - "POST"
          - "PUT"
        AllowHeaders:
          - "authorization"
          - "content-type"
          - "x-amz-date"
          - "x-amz-security-token"
        MaxAge: 600
        AllowCredentials: false
        AllowOrigins:
          - "*"
        ExposeHeaders:
          - '*'

  ApiGatewayUnAuthenticatedAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:      
      PolicyName: ApiGatewayUnAuthenticatedAccessPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "execute-api:Invoke"              
            Resource: 
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/*/carts"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/*/carts/*"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/categories/all"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/coupon_offer"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/POST/experiment/outcome"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/POST/orders"              
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/popular"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/products/*"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/recommendations"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/related"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/POST/rerank"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/search/products"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/POST/sign"                            
      Roles: 
        - !Ref CognitoUnAuthorizedRole
        - !Ref CognitoAuthorizedRole

  ApiGatewayAuthenticatedAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:      
      PolicyName: ApiGatewayAuthenticatedAccessPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "execute-api:Invoke"              
            Resource:
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/POST/choose_discounted"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/cstore_location"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/cstore_route"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/customer_route"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/*/orders/*"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/POST/users"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/*/users/*"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/store_location"
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpAPI}/*/GET/stream_details"
      Roles: 
        - !Ref CognitoAuthorizedRole
  
  ProductsServiceIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref HttpAPI
      Description: Product Service Integration
      ConnectionId: !Ref VpcLink
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Ref ProductsServiceELBListener
      PassthroughBehavior: WHEN_NO_MATCH
      PayloadFormatVersion: '1.0'
      RequestParameters:
        "overwrite:header.cognitoAuthenticationProvider": "$context.identity.cognitoAuthenticationProvider"
  
  UsersServiceIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref HttpAPI
      Description: Users Service Integration
      ConnectionId: !Ref VpcLink
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Ref UsersServiceELBListener
      PassthroughBehavior: WHEN_NO_MATCH
      PayloadFormatVersion: '1.0'

  CartsServiceIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref HttpAPI
      Description: Carts Service Integration
      ConnectionId: !Ref VpcLink
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Ref CartsServiceELBListener
      PassthroughBehavior: WHEN_NO_MATCH
      PayloadFormatVersion: '1.0'

  OrdersServiceIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref HttpAPI
      Description: Orders Service Integration
      ConnectionId: !Ref VpcLink
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Ref OrdersServiceELBListener
      PassthroughBehavior: WHEN_NO_MATCH
      PayloadFormatVersion: '1.0'
  
  RecommendationsServiceIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref HttpAPI
      Description: Recommendations Service Integration
      ConnectionId: !Ref VpcLink
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Ref RecommendationsServiceELBListener
      PassthroughBehavior: WHEN_NO_MATCH
      PayloadFormatVersion: '1.0'

  VideosServiceIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref HttpAPI
      Description: Videos Service Integration
      ConnectionId: !Ref VpcLink
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Ref VideosServiceELBListener
      PassthroughBehavior: WHEN_NO_MATCH
      PayloadFormatVersion: '1.0'

  SearchServiceIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref HttpAPI
      Description: Search Service Integration
      ConnectionId: !Ref VpcLink
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Ref SearchServiceELBListener
      PassthroughBehavior: WHEN_NO_MATCH
      PayloadFormatVersion: '1.0'

  LocationServiceIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref HttpAPI
      Description: Location Service Integration
      ConnectionId: !Ref VpcLink
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Ref LocationServiceELBListener
      PassthroughBehavior: WHEN_NO_MATCH
      PayloadFormatVersion: '1.0'

  GetProduct:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /products/id/{id}'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref ProductsServiceIntegration

  GetCategory:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetProduct
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /products/category/{name}'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref ProductsServiceIntegration

  GetFeatured:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetCategory
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /products/featured'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref ProductsServiceIntegration

  GetCategories:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetFeatured
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /categories/all'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref ProductsServiceIntegration

  CreateUser:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetCategories
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'POST /users'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref UsersServiceIntegration

  GetUserById:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /users/id/{id}'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref UsersServiceIntegration

  UpdateUser:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetUserById
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'PUT /users/id/{id}'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref UsersServiceIntegration

  GetUserByUsername:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: UpdateUser
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /users/username/{username}'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref UsersServiceIntegration

  GetUnclaimedUser:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetUserByUsername
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /users/unclaimed'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref UsersServiceIntegration

  GetRandomUser:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetUnclaimedUser
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /users/random'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref UsersServiceIntegration

  ClaimUser:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetRandomUser
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'PUT /users/id/{userId}/claim'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref UsersServiceIntegration

  VerifyPhone:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'PUT /users/id/{userId}/verifyphone'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref UsersServiceIntegration

  CreateCart:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: VerifyPhone
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'POST /carts'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref CartsServiceIntegration

  GetCart:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: CreateCart
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /carts/{cartId}'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref CartsServiceIntegration

  GetCartbyUsername:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetCart
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /carts'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref CartsServiceIntegration

  UpdateCart:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetCartbyUsername
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'PUT /carts/{cartId}'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref CartsServiceIntegration

  Sign:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: UpdateCart
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'POST /sign'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref CartsServiceIntegration

  CreateOrder:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'POST /orders'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref OrdersServiceIntegration

  GetOrders:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: CreateOrder
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /orders/all'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref OrdersServiceIntegration

  GetOrderById:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetOrders
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /orders/id/{orderId}'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref OrdersServiceIntegration
  
  PutOrderById:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetOrderById
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'PUT /orders/id/{orderId}'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref OrdersServiceIntegration

  GetOrderByUsername:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: PutOrderById
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /orders/username/{username}'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref OrdersServiceIntegration

  GetRecommendations:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetOrderByUsername
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /recommendations'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref RecommendationsServiceIntegration

  GetPopular:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /popular'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref RecommendationsServiceIntegration

  GetRelated:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetPopular
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /related'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref RecommendationsServiceIntegration

  Rerank:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetRelated
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'POST /rerank'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref RecommendationsServiceIntegration

  GetDiscounts:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: Rerank
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'POST /choose_discounted'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref RecommendationsServiceIntegration

  GetCouponOffer:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetDiscounts
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /coupon_offer'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref RecommendationsServiceIntegration

  RecordExperimentOutcome:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetCouponOffer
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'POST /experiment/outcome'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref RecommendationsServiceIntegration

  VideoStream:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /stream_details'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref VideosServiceIntegration

  SearchProducts:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: VideoStream
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /search/products'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref SearchServiceIntegration

  GetStoreLocation:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: SearchProducts
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /store_location'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref LocationServiceIntegration

  GetCustomerRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetStoreLocation
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /customer_route'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref LocationServiceIntegration

  GetCStoreLocation:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetCustomerRoute
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /cstore_location'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref LocationServiceIntegration

  GetCStoreRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    DependsOn: GetCStoreLocation
    Properties:
      ApiId: !Ref HttpAPI
      RouteKey: 'GET /cstore_route'
      AuthorizationType: AWS_IAM
      Target: !Join 
        - /
        - - integrations
          - !Ref LocationServiceIntegration

Outputs:
  APIEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !GetAtt HttpAPI.ApiEndpoint
  ApiGatewayId:
    Description: API Gateway Id
    Value: !Ref HttpAPI
